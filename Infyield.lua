--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,bd,bd)local bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=111,44,11,86,74,84,60,63,26,58,38,82,38,37,86,90,16,86,67,98,13,21,20,80,93,49,22,35,42,68,96,87,48,33,14,18,67,21,11,85,32,50,12,30,93,17,93,56,55,64,89 while bd~=74 do if be<=734 then if be<=387 then if be<=175 then if be>=130 then if be<=130 then ce=string.char be=145 else if be<170 then be=175 co=string.sub else bj=string.gsub be=190 end end else if be<77 then bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=nil be=85 else be=130 cr=string.byte end end else if be>=306 then if be<=306 then be=349 bf=math.ldexp else if be>353 then be=415 cq=setmetatable else cj=(getfenv or function()return _ENV end)be=387 end end else if be>=211 then if be>213 then be=306 cf=table.insert else bw=table.concat be=258 end else ca=string.rep be=211 end end end else if be<=498 then if be>=463 then if be<=463 then bi=(function(bf,bw)if not(cg(bf)~='number')then return true else return false end end)be=481 else if be<495 then do bl=math.abs end be=498 else bv=math.floor be=531 end end else if be>417 then be=463 cg=type else cp=select be=444 end end else if be>=650 then if be<=650 then be=692 for bf=0,255 do cb[bf]=ce(bf);end else if be<727 then cn=bj(y,'..',function(y,bf,bf)return cb[bq(y,16)]end)be=734 else ch={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,bc,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,k,2,3,12,13,14,15,8,9,10,11,},{d,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,t,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{l,9,10,11,12,13,14,15,0,1,c,3,4,i,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,r,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}be=765 end end else if be>=575 then if be>580 then be=650 do cb={}end else bq=tonumber be=616 end else ci=(unpack or table.unpack)be=575 end end end end else if be<=1043 then if be>=880 then if be<=935 then if be>=919 then if be<930 then be=935 cm=(bit_lib and bit_lib.bxor or function(c,d)c=c%(2^32)d=d%(2^32)local i,j=0,j while c>0 and d>0 do local k,l=c%16,d%16 i=i+ch[k+1][l+v]*j c=(c-k)/16 d=(d-l)/16 j=j*16 end i=i+c*j+d*j return i end)else bn=function(c,d,i,j,j)local j j=((c/2^(d-1))%2^((i-1)-(d-1)+1))return(j-j%1);end be=969 end else be=919 cd=function(c,d,i,j)local j,k,l=64,43,79,84,55,45,75,62,32,80,41,30,55 while j~=25 do if k>=126 then if k>=173 then if k>176 then j=25;else k=212 return l end else l=(l-l%1)k=173 end else if k>=69 then if k>75 then l=((d/cc[c])%cc[i])k=126 else do l=nil end k=111 end else k=69 l=nil end end end end end else if be>=1003 then if be<1035 then be=1043 bs=function()local c,d,i,j d,c,i,j=cr(cn,by,(by+3))by=(by+4);return((j*16777216)+(i*65536)+(c*256)+d);end else do bm=function()local c c=cr(cn,by,by)by=(by+1);return c;end end be=1083 end else by=1 be=1003 end end else if be>=808 then if be>=843 then if be<860 then be=863 do cl=2 end else for c=1,31 do cc[c]=cl do cl=(cl*2)end end be=880 end else cc={[0]=q}be=843 end else if be<777 then be=783 bg=''else do bo=(2^52)end be=808 end end end else if be<=1208 then if be>=1160 then if be<=1160 then ck=function(c,c,c,c)local c,d,i,j=61,48,37,79,10,69,20,83,50,95,34,50,81,25,59,86 while c~=29 do if d<=110 then if d<=48 then i,j=nil d=89 else if d<105 then d=110 j=bs()else d=140 do i=cn:sub(by,(by+j-1))end end end else if d>=182 then if d<190 then d=197 return i;else c=29;end else by=(by+j);d=182 end end end end be=1178 else if be>1185 then bp={}be=1246 else be=1208 bk=function(...)return{...},cp('#',...)end end end else if be<1104 then do bx=function()local c,d d,c=cr(cn,by,(by+2))by=(by+2);do return((c*256)+d);end end end be=1112 else be=1160 bh=function()local c,d,i,j,k,l,q,r=87,37,80,23,33,79,41,93,68,12,98,46,40,29,81,24,27,15,55 while c~=39 do if d>=180 then if d<=239 then if d<=180 then k=cd(20,l,11)d=203 else if d<236 then q=(cd(0,l,20)*4294967296+i)d=239 else r=1 d=269 end end else if d<=269 then d=291 if 0==k then if h~=q then k=1 r=0 else return(j*0)end elseif not(k==2047)then else if 0==q then do return(j*(0/0))end else do return(j*(1/e))end end end else if d<323 then d=325 return(j*(2^(k-1023))*(q/bo+r))else break end end end else if d<=54 then if d>39 then i=bs()d=73 else d=54 i,j,k,l,q,r=nil end else if d>=117 then if d<158 then d=160 if((i==0 and l==0))then return 0 end else d=180 j=((-1)^cd(31,l,1))end else d=117 do l=bs()end end end end end end end end else if be>=1360 then if be>=1386 then if be>1388 then bd=74;else be=1416 return bz(bt(cj()),{},cj())();end else be=1386 bz=function(c,d,e,h)local h,i,j,k,l j=c[107]l=c[90]h=bu i=c[119]k=c[60]do return function(...)local c,h,q,r,t,v,y,bc,bd bd=1 v=-1 t=-1 r={}c={...}bc=(cp('#',...)-1)q={}h={}for t=0,bc do if(not(t<j))then r[(t-j)]=c[(t+1)];else h[t]=c[(t+1)];end;end;y=(bc-j+1)while true do local t,y,bf,bg,bi,bj,bl,bo,bq,bv bv=i[bd]bg=bv[146]bj=bv[96]bf=bv[154]t=bv[p]do bi=bv[95]end bl=bv[5]do bq=bv[f]end bo=bv[21]y=bv[192]do if not(bg<51)then if not(bg>u)then if not(bg>62)then if not(bg<57)then do if not(bv[146]<60)then if not(bg<61)then if(bg<b)then local b,f,p,u p=bf do b=((bi-1)*50)end do f=h[p]end u=bo for bj=1,u do do f[(b+bj)]=h[(p+bj)]end end;else bu[bf]={}end else local b do b=bv[154]end h[b](h[(b+1)])end else if not(bv[146]>57)then local b b=bf h[b]=h[b]();else if 58==bv[146]then h[bf][l[bo]]=h[bi];else do i[bd]=bp[bl];end bd=bo;end end end end else if not(bg>53)then if not(bg>51)then bu[bf]=bu[t]else if(bg<53)then local b,f b=bf f=h[bo]h[(b+1)]=f;h[b]=f[l[bi]];else if((h[bf]>h[bi]))then bd=bv[21];end;end end else if not(bg<55)then if(bg<56)then local b b=bf h[b](ci(h,(b+1),bo))else h[bf]=-h[bo];end else local b b={}if(#q>0)then for f=1,#q do local p p=q[f]for f=0,#p do local u,bj,bw bw=p[f]bj=bw[1]u=bw[2]if(bj==h and u>=0)then b[u]=bj[u]bw[1]=b end end end end return bv[bf],bv[t];end end end else if not(bg>68)then if not(bg<66)then if not(bg>66)then if not h[bf]then bd=bo;end;else if(bg>67)then h[bf]=(h[bo]*l[bi]);else bu[bv[154]]=h[t]end end else do if not(bv[146]>63)then do i[bd]={[95]=0,[o]=22,[146]=bg- -10,[21]=3,[5]=0};end bd=(bd-1);else if a==bg then do h[bf]=(h[bo]+l[bi]);end else h[bv[154]]={};end end end end else if not(bg>71)then if not(bg>69)then bd=((l[bf]<h[bi])and bo or bd)else if not(bv[146]~=70)then i[bd]={[146]=bg-36,[154]=37,[21]=19,[95]=47,[5]=0};do bd=(bd-1);end else h[bv[192]]();end end else do if not(bv[146]<74)then do if 74==bg then if(not(h[bf]==l[bi]))then bd=bo;end;else local a,b,f a=bv[154]f=h[a]do b=h[(a+2)]end if((b>0))then if((f>h[a+1]))then do bd=bo;end else h[(a+3)]=f;end elseif((f<h[a+1]))then bd=bo;else h[(a+3)]=f;end end end else if(bg>72)then h[bf]=e[l[bo]];else local a,b,f,o,p p=bf o=bi a=(p+2)do b={h[p](h[p+1],h[a])}end for u=1,o do h[(a+u)]=b[u]end f=h[(p+3)]do if f then h[a]=f else bd=bo;end;end end end end end end end else if not(bg<89)then if not(bg>94)then if not(bg>91)then if not(bg>89)then do while(l[bf]<h[bi])do bd=bo;break end end else if(bv[146]<91)then h[bv[bf]]=h else do h[y]=(function()h[bf]=bz(k[t],nil,e);end)end end end else do if not(bg>92)then do bd=bo;end else if 93==bg then h[bf]=e[l[bo]][l[bi]];else i[bd]={[5]=0,[146]=bg-76,[21]=30,[154]=28,[95]=0};bd=(bd-1);end end end end else if not(bg<98)then if not(bg>99)then if(bg<99)then local a,b b,a=bk(...)for a=1,bf do h[(a-1)]=b[a]end else v=bv[bf];end else do if(bg>100)then h[bf]=(not h[bo]);else h[bf]=(not(bv[21]==0));bd=(bd+1);end end end else if not(bg>95)then bu=h else if(bg<97)then h[bf]=l[bv[21]]else h[bf][h[bo]]=l[bi];end end end end else do if not(bg>81)then if not(bg>78)then if not(bg<77)then if(bg<78)then if bf then bv[154]=false;do bv[95]=bo;end bd=(bd-1);else bd=(bd+bv[21]+bi);end else if(not(h[bf]~=l[bi]))then bd=bo;end;end else end else if not(bg<80)then if not(bg~=80)then i[bd]={[146]=bg-7,[21]=59,[95]=0,[5]=0,[154]=26};bd=(bd-1);else local a a=bv[154]h[a]=h[a](ci(h,a+1,bo));end else local a,b b=bf a={}if(#q>0)then for f=1,#q do local o o=q[f]do for f=0,#o do local p,u,bj u=o[f]do p=u[1]end bj=u[2]if(p==h and bj>=0)then a[bj]=p[bj]do u[1]=a end end end end end end return ci(h,b,v);end end else if not(bg<85)then do if not(bg>86)then if(bg>85)then local a,b a=bv[154]b={}for f=1,#q do local o do o=q[f]end for f=0,#o do local p,q,u do p=o[f]end q=p[1]do u=p[2]end do if(q==h and u>=a)then b[u]=q[u];p[1]=b;end;end end;end;else local a,b,f do f=bf end do a={h[f](ci(h,f+1,v))}end b=0 for o=f,bi do b=(b+1);h[o]=a[b];end end else if 87==bg then bd=((l[bv[154]]~=l[bi])and bo or bd)else h={};for a=0,bc do if(a<j)then h[a]=c[(a+1)];else break end;end;end end end else if not(bv[146]>82)then do return h[bq][bl]end else if(bg<84)then e[l[bo]]=h[bf];else bu[bf]()end end end end end end end else if not(bg>24)then if not(bv[146]>11)then if not(bg<6)then if not(bg>8)then if not(bg<7)then do if(bg>7)then i[bd]=bp[bl];do bd=bo;end else if((h[bf]<h[bi]))then bd=bo;end;end end else local a do a=bf end h[a]=h[a](h[a+1]);end else if not(bg<10)then if(bg<11)then do d[bo]=h[bv[154]];end else local a do a=bf end do return h[a](ci(h,(a+1),bo))end;end else h[bf]=#h[bo];end end else if not(bg>2)then if not(bg<1)then do if not(bg~=1)then local a a=bv[154]do return ci(h,a,(a+bo))end;else local a do a=bf end do h[a]=h[a](ci(h,a+1,v));end end end else do do return h[bf]end end end else do if not(bg>3)then local a,b,c c=bf a={h[c](ci(h,c+1,bv[21]))}b=0 do for f=c,bi do b=(b+1);h[f]=a[b];end end else if 4==bg then do if h[bf]then bd=bv[21];end;end else local a,b do a=bf end b=bv[21]for c=a,b do h[c]=r[(c-a)];end;end end end end end else if not(bg<18)then if not(bg>20)then if not(bg<19)then if(bg<20)then do h[bv[bb]]=(h[bo]+h[bi]);end else h[bf]=(h[bo]*h[bi]);end else local a,b,c,f do a=bf end c,b=bk(h[a](ci(h,(a+n),bo)))v=(b+a-1)f=0 for b=a,v do f=(f+1);h[b]=c[f];end;end else if not(bg>22)then if(bg>21)then local a,b,c,f a=bf b,f=bk(h[a](h[(a+1)]))v=(f+a-1)c=0 for f=a,v do c=(c+1);h[f]=b[c];end;else h[bf]=(h[bo]^h[bi]);end else if(bg<24)then i[bd]={[21]=18,[146]=bg- -73,[95]=37,[5]=0,[154]=16};bd=(bd-1);else local a a=h[bq][bl]h[bq][bl]=(a..h[bv[95]]);end end end else if not(bg<15)then if not(bv[146]<16)then if(bg<17)then h[bf]=h[bo][l[bi]];else h[bf]=nil;end else h[bf]=bu[t]end else if not(bg>12)then h[bf]=(h[bo]/l[bv[95]]);else if(bg>13)then local a,b b=bf do a=h[bo]end h[(b+1)]=a;do h[b]=a[h[bv[95]]];end else end end end end end else do if not(bg<38)then if not(bv[146]<44)then if not(bg>46)then do if not(bg<45)then if not(bg~=45)then h[bf]=(h[bo]/h[bv[95]]);else h[bf]=bu[t]end else h[bf]=h[bo][h[bi]];end end else if not(bg>48)then if(bg<48)then bd=((l[bf]==l[bv[95]])and bo or bd)else h[bv[154]]=bz(k[bo],nil,e);end else do if(bg>49)then if not h[bi]then h[bf]=h[bi];bd=bo;end;else e=h[bv[bf]]end end end end else if not(bg>40)then if not(bg<39)then do if(bv[146]>39)then do return h[bf]();end;elseif(not(h[bf]<h[bi]))then bd=bo;end end else h[bf]=(h[bo]-h[bi]);end else if not(bg>41)then do h[bv[154]]=(h[bv[21]]%l[bi]);end else do if 42==bg then h[bf]=(h[bo]%h[bi]);else do l=bu[bf](l)end end end end end end else do if not(bg<31)then if not(bg<34)then if not(bg>35)then if 34==bg then h[bf]=h[bo];else h[bv[154]]=h[bo]end else if(bg<37)then if(not(h[bf]==h[bi]))then bd=bo;end;else h[bf][l[bo]]=l[bi];end end else if not(bg<32)then if(bg<33)then else local a,b,c do c=bf end a={h[c](h[c+1])}b=0 for f=c,bi do b=(b+1);h[f]=a[b];end end else h[bf][h[bo]]=h[bi];end end else if not(bg<28)then if not(bv[146]>28)then local a,b,c c=bf b=h[(c+2)]a=(h[c]+b)do h[c]=a;end do if((b>0))then if(not(a>h[c+1]))then bd=bv[21];h[(c+3)]=a;end elseif(not(a<h[c+1]))then bd=bv[w];h[(c+3)]=a;end end else do if(bg>29)then h[y]=(function()h[bv[154]]=bz(k[t],nil,e);end)else local a,b do a=bo end b=h[a]do for c=(a+1),bv[z]do b=(b..h[c]);end;end h[bf]=b;end end end else if not(bg>25)then for a=bf,bo do h[a]=nil;end;else if(bg<s)then h[bf]=d[bo];else local a,b,c a=bf do c=h[a]end b=bo for d=1,b do c[d]=h[(a+d)]end;end end end end end end end end end end bd=(bd+1);end;end;end end end else if be>=1293 then if be<1312 then be=1319 bu={}else be=1360 br={}end else bt=function(a,b)local b,c,d,e,f,h,i,j=75,53,30,14,29,64,79,30,93,36,66,12,24,69,46,58,51,40,61,85,20,29,49,34,55 while b~=36 do if c>=325 then if c>=493 then if c>=567 then if c>=596 then if c<618 then c=622 return e;else break end else c=596 e[60]=h;end else if c<525 then c=531 e[107]=bm();else c=567 for b=1,bs()do h[b-1]=bt();end end end else if c>=409 then if c<448 then c=451 for b=1,d do local k,l,n,o=47,47,99,95,85,61,74,67,98,29,36,18,81,98,54,67 while k~=35 do if l>=149 then if l<=149 then if(0==n)then o=(0~=bm());elseif(not(n~=1))then o=bh();elseif(3==n)then o=ck();elseif(4==n)then o=a[ck()];end;l=172 else if l>176 then k=35;else l=218 f[b]=o;end end else if l>=96 then if l>104 then o=nil l=149 else n=bm()l=111 end else n,o=nil l=96 end end end end else e[90]=f c=493 end else if c>328 then f={}c=409 else d=bs()c=364 end end end else if c<=168 then if c>=125 then if c>129 then do e={}end c=185 else c=168 h={}end else if c<85 then c=93 d,e,f,h,i,j=nil else c=125 i={}end end else if c<=222 then if c>188 then c=253 for a=(#bp+1),(#bp+j)do local b,d,f,h,k=87,45,28,52,18,83,33,22,46,37,92,66,47,62,10,14,35,50,57,33,70,67,72,88,67 while b~=43 do if d<=248 then if d>=178 then if d<=198 then if d<195 then h=bs()d=198 else d=219 k[5]=bm();end else if d>223 then k[146]=bn(h,1,11);d=286 else k[x]=bn(f,1,2);d=248 end end else if d>=111 then if d>117 then f=bs()d=178 else d=130 k[96]=bm();end else if d<64 then f,h,k=nil d=67 else k={}d=111 end end end else if d<=353 then if d<=304 then if d>288 then k[184]=bn(f,12,20);d=321 else k[ba]=bn(f,3,11);d=304 end else if d>328 then k[21]=bn(h,12,33);d=374 else k[95]=bn(f,21,29);d=353 end end else if d<=408 then if d>383 then k[192]=-k[95]d=442 else k[172]=-k[154]d=408 end else if d>445 then b=43;else d=482 bp[a]=k;end end end end end end else j=bs()c=222 end else if c<291 then c=296 for a=1,bs()do local b,d,f,h,j,k=58,76,59,62,63,57,94,56,24,72,53,77,41,53,36,56,60,27,16,52,43,30,94,48,10,70 while b~=46 do if d<=302 then if d<=199 then if d>=151 then if d<192 then h[96]=bm();d=199 else h[92]={};d=222 end else if d>81 then d=151 h={{},nil,nil}else f,h,j,k=nil d=110 end end else if d>=265 then if d>=281 then if d>289 then d=317 h[53]=k else d=302 k=bn(j,1,2)end else f=bs()d=281 end else if d>225 then d=265 j=bs()else d=237 if not(bm()~=1)then for k=1,bm()do h[92][k]={bm()==0,bs()}end end end end end else if d>=441 then if d<=480 then if d<477 then h[5]=bn(j,12,20);d=480 else d=526 h[m]=-h[154]end else if d>=565 then if d<600 then d=604 i[a]=h;else b=46;end else d=565 h[192]=-h[95]end end else if d<=345 then if d>323 then d=391 h[154]=bn(j,3,11);else d=345 h[146]=bn(f,g,11);end else if d>399 then h[95]=bn(j,21,29);d=441 else h[21]=bn(f,12,33);d=416 end end end end end end else c=325 e[119]=i;end end end end end end be=1293 end end end end end end end
