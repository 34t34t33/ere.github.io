--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bh)local bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=124,94,28,45,19,28,61,15,56,72,63,69,30,37,49,17,39,86,77,29,42,19,73,79,25,91,69,69,65,57,14,82,27,95,37,10,88,64,54,27,74,45,62,79,84,98,97,81,45,34,66,77 while bh~=76 do if bi<=757 then if bi<=381 then if bi<=207 then if bi>=141 then if bi>=177 then if bi>184 then bs=string.gsub bi=223 else bx=string.sub bi=207 end else do ch=string.char end bi=177 end else if bi>99 then bi=141 cq=string.byte else bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=nil bi=124 end end else if bi>=302 then if bi<=302 then bi=350 br=math.ldexp else if bi>359 then bi=420 do cr=setmetatable end else bk=(getfenv or function()return _ENV end)bi=381 end end else if bi<=223 then bi=245 bo=string.rep else if bi<272 then bi=281 do bp=table.concat end else bi=302 bt=table.insert end end end end else if bi<=527 then if bi>=476 then if bi>=499 then if bi<523 then cj=math.abs bi=527 else do cc=math.floor end bi=568 end else bi=499 ck=(function(bo,bp,bp,bp,bp)if not(cv(bo)~='number')then return true else return false end end)end else if bi<454 then bj=select bi=461 else bi=476 cv=type end end else if bi<=638 then if bi<=568 then bi=611 do ci=(unpack or table.unpack)end else if bi<632 then bi=638 co=tonumber else bn={}bi=665 end end else if bi>=710 then if bi>713 then do cf={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,u,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,o,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,bg,1,14,15,12,13,bb,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,e,},{m,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,y,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,f,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end bi=786 else cn=bsfunction(e,f,f)do return bn[co(e,16)]end end)bi=757 end else bi=710 for e=0,255 do do bn[e]=ch(e);end end end end end end else if bi<=1074 then if bi<=899 then if bi<=810 then if bi>793 then bi=836 cu=(2^52)else bi=810 cp=''end else if bi>=859 then if bi>865 then bi=922 for e=1,31 do bl[e]=cg cg=(cg*2)end else cg=2 bi=899 end else bl={[0]=1}bi=859 end end else if bi<=982 then if bi<=922 then bm=function(e,f,m,o,o,o)local o,u,y=70,64,87,72,25,44,92,19,21,84,89,95,22,64 while o~=44 do if u>=179 then if u<=179 then y=(y-y%1)u=220 else if u>225 then o=44;else u=260 do return y end end end else if u>=95 then if u>100 then y=((f/bl[e])%bl[m])u=179 else u=141 do y=nil end end else u=95 y=nil end end end end bi=967 else if bi<979 then bi=982 ct=(bit_lib and bit_lib.bxor or function(e,f)e=e%(2^32)f=f%(2^32)local m,o=0,1 while e>0 and f>0 do local u,y=e%16,f%16 m=m+cf[u+1][y+1]*o e=(e-u)/16 f=(f-y)/16 o=o*16 end m=m+e*o+f*o return m end)else do bq=function(e,f,m,o,o)local o o=((e/2^(f-1))%d^((m-1)-(f-r)+a))do return(o-o%1);end end end bi=1016 end end else if bi<=1016 then bi=1048 ca=1 else if bi<1067 then bi=1074 do ce=function()local a,d,e,f f,d,e,a=cq(cn,ca,(ca+l))do ca=(ca+4);end do return((a*16777216)+(e*65536)+(d*256)+f);end end end else bi=1111 cb=function()local a a=cq(cn,ca,ca)ca=(ca+1);return a;end end end end end else if bi>=1321 then if bi<=1390 then if bi>=1365 then if bi>1368 then bi=1431 bw={}else cd={}bi=1390 end else do cm=function(a,d,d)local d,e,f,l,m,o,r,u=59,38,40,27,50,46,72,88,16,19,83,57,14,53,86,73,79,10,63,81,17,31,65 while d~=36 do if e>=282 then if e<=387 then if e<=323 then if e<319 then e=323 l[76]=m;else do for d=1,ce()do local y,bb,bg,bl,bn,bo=65,66,40,29,78,90,73,50,34,20,33,89,11,79,58,82,55,90,91,54,99,96,68,41,91,96,42 while y~=45 do if bb>=314 then if bb>=484 then if bb<=522 then if bb>492 then bl[74]=-bl[25]bb=542 else bl[41]=bq(bo,12,c);bb=522 end else if bb<=542 then bl[173]=-bl[162]bb=591 else if bb>593 then break else bb=636 o[d]=bl;end end end else if bb>=407 then if bb>413 then bl[162]=bq(bo,21,b);bb=484 else bl[127]=bq(bn,12,33);bb=442 end else if bb<355 then bb=362 bl[169]=bq(bn,1,11);else bl[25]=bq(bo,3,h);bb=407 end end end else if bb>=182 then if bb<=200 then if bb<191 then while cb()==1 do for b=1,cb()do bl[107][b]={cb()==0,ce()}end break end bb=200 else bb=215 bo=ce()end else if bb>=259 then if bb<279 then bb=285 bg=bq(bo,1,2)else bb=314 do bl[141]=bg end end else bb=259 bn=ce()end end else if bb<=99 then if bb<96 then bg,bl,bn,bo=nil bb=99 else bb=135 bl={{},nil,nil,nil}end else if bb>141 then bb=182 bl[107]={};else bl[185]=cb();bb=161 end end end end end end end e=359 end else if e>364 then u=ce()e=407 else l[95]=o;e=387 end end else if e>=463 then if e<=463 then l[140]=r e=491 else if e<505 then e=514 return l;else break end end else if e>415 then for b=1,u do local c,d,h,y=68,54,65,89,75,37,96,61,43,55,32,38,18,40,17 while c~=44 do if d<=114 then if d>=74 then if d>83 then do y=nil end d=153 else h=cb()d=114 end else d=74 h,y=nil end else if d<=153 then d=189 if(not(h~=1))then y=(not(cb()==0));elseif(4==h)then y=bu();elseif(2==h)then do y=bv();end elseif(not(h~=0))then y=a[bv()];end;else if d<225 then d=232 r[b]=y;else c=44;end end end end end e=463 else e=423 r={}end end end else if e<=124 then if e>=86 then if e>88 then e=152 l={}else m={}e=124 end else if e<55 then e=61 f,l,m,o,r,u=nil else o={}e=86 end end else if e<=193 then if e>159 then e=225 for a=(#cl+1),(#cl+f)do local b,c,d,h,o=93,51,64,73,51,92,31,38,83,67,76,47,18,62,68,45,37,63,42,42,17,34,24,72 while b~=50 do if c<=241 then if c>=166 then if c<=195 then if c<192 then d=ce()c=195 else c=223 o[41]=cb();end else if c>226 then o[169]=bq(d,1,11);c=257 else o[i]=bq(h,1,2);c=241 end end else if c>=128 then if c>133 then c=166 h=ce()else do o[185]=cb();end c=143 end else if c>58 then c=128 o={}else d,h,o=nil c=85 end end end else if c<=352 then if c>=327 then if c<347 then c=352 do o[162]=bq(h,21,29);end else o[127]=bq(d,12,33);c=391 end else if c>260 then c=327 o[144]=bq(h,12,20);else o[25]=bq(h,3,11);c=280 end end else if c>=480 then if c>485 then b=50;else c=508 do cl[a]=o;end end else if c<427 then o[74]=-o[25]c=433 else o[173]=-o[t]c=480 end end end end end end else e=193 f=ce()end else if e>228 then for a=1,ce()do m[a-1]=cm();end e=282 else e=252 l[13]=cb();end end end end end end end bi=1365 end else if bi<=1431 then by=function(a,b,c,d,d,d)local d,e,f,h,i d=a[13]e=a[140]do i=cd end f=a[76]do h=a[95]end return function(...)local a,i,l,m,o,r,t,u,y i=1 do r=-1 end do o=-1 end u={}t={...}l=(bj('#',...)-1)a={}y={}for o=0,l do if(not(o<d))then u[(o-d)]=t[(o+1)];else do y[o]=t[(o+1)];end end;end;m=(l-d+1)while true do local m,o,bb,bg,bl,bn,bo,bp,bq,br bp=h[i]br=bp[169]do bg=bp[185]end m=bp[25]do bl=bp[144]end o=bp[162]do bb=bp[41]end do bn=bp[74]end bq=bp[127]bo=bp[173]if not(br<50)then if not(br<75)then do if not(br>87)then if not(bp[169]<81)then do if not(br>83)then if not(br<82)then if not(br~=82)then y[m]=cd[bl]else local bg,bs,bt do bg=m end do bt={y[bg](ci(y,bg+1,bq))}end bs=0 for bw=bg,o do bs=(bs+1);y[bw]=bt[bs];end end else while(y[m])do i=bq;break end end else if not(br>85)then if 84==br then y[m][y[bq]]=y[o];else local bg,bs,bt bg=m do bs=y[(bg+2)]end bt=(y[bg]+bs)y[bg]=bt;if((bs>bf))then if(not(bt>y[bg+1]))then i=bq;y[(bg+3)]=bt;end elseif(not(bt<y[bg+1]))then i=bq;y[(bg+3)]=bt;end end else if(br<87)then i=((e[bp[25]]~=e[o])and bp[127]or i)else local bf bf=m y[bf]=y[bf](ci(y,bf+1,bp[127]));end end end end else if not(br<k)then do if not(br>78)then if((y[m]>y[o]))then i=bq;end;else do if(br>79)then y[m]=(y[bq]*y[o]);else c=y[bp[m]]end end end end else do if not(br>75)then y[bp[25]]=(y[bp[127]]%y[o]);else if(br<77)then if((y[m]<y[bp[162]]))then i=bq;end;else y[bo]();end end end end end else if not(br>93)then if not(br<91)then if not(br<92)then if(br<93)then do y[m]=cd[bl]end else local k,bf k=bq bf=y[k]for bg=(k+1),o do bf=(bf..y[bg]);end;y[m]=bf;end else local k k=m y[k]=y[k](y[k+1]);end else do if not(br<89)then do if(bp[169]>89)then cd=y else h[i]={[127]=20,[169]=bp[169]- -s,[25]=g,[162]=61,[41]=0};i=(i-1);end end else cd[m]()end end end else if not(br>96)then do if not(br<95)then if(br<96)then do y[bo]=(function()y[m]=by(f[bl],nil,c);end)end else end else do y[m]=y[bp[127]];end end end else do if not(br<j)then do if 99==br then y[m]=(y[bq]-y[o]);else end end else if(br>97)then y[m]=(y[bq]+e[o]);else local g do g=y[bn][bb]end y[bp[74]][bb]=(g..y[o]);end end end end end end end else if not(br<62)then if not(br>z)then if not(bp[169]<65)then if not(bp[169]<66)then if(br>66)then y[m]=y[bq]else local g,j,k,s do g=m end do j,k=bz(y[g](ci(y,(g+1),bq)))end r=(k+g-1)s=0 for k=g,r do s=(s+1);do y[k]=j[s];end end;end else y[m]=(y[bq]/y[o]);end else if not(bp[169]>62)then i=((e[bp[25]]<y[o])and bq or i)else if(br>63)then local g,j j=m g=y[bp[127]]y[(j+1)]=g;y[j]=g[e[o]];else local g,j,k,s g=m s=((o-1)*50)k=y[g]j=bq for z=1,j do k[(s+z)]=y[(g+z)]end;end end end else if not(br<71)then if not(bp[169]>72)then if not(br~=71)then h[i]=cl[bb];i=bq;else y[m]=(y[bq]^y[bp[162]]);end else if(br<74)then y[m]=(not y[bq]);else h[i]={[169]=bp[169]- -20,[127]=22,[162]=4,[25]=25,[41]=0};i=(i-1);end end else if not(bp[169]<69)then if(br<70)then do c[e[bq]]=y[m];end else local g g=m do do return y[g](ci(y,(g+1),bq))end end;end else y[m]=by(f[bp[127]],nil,c);end end end else if not(br>55)then do if not(br<53)then if not(br>53)then y[bp[25]]=(y[bp[127]]%e[o]);else if not(br~=54)then local g,j j=m g=bp[127]for k=j,g do y[k]=u[(k-j)];end;else end end else if not(br>50)then do i=((e[m]==e[bp[162]])and bq or i)end else do if(bp[169]<52)then h[i]={[41]=0,[127]=18,[162]=80,[169]=bp[169]-26,[25]=3};do i=(i-1);end else local g do g=m end y[g](y[(g+1)])end end end end end else if not(br>58)then if not(br>56)then if(not(y[m]==y[o]))then i=bq;end;else do if(br<58)then y[m]=(y[bq]*e[o]);else y[bo]=(function()do y[m]=by(f[bl],nil,c);end end)end end end else if not(br<60)then if(bp[169]>60)then do y[m]=b[bq];end else do y[bp[25]]=(not(bq==0));end do i=(i+1);end end else if not y[bp[25]]then i=bq;end;end end end end end else if not(br>24)then if not(bp[169]>11)then if not(br<6)then if not(br<9)then do if not(br>9)then do y[m]=y[bq][y[o]];end else if not(br~=10)then y[m]=-y[bq];else do y[m]=nil;end end end end else if not(br<bc)then if(br>7)then do y[m]=y[bq][e[o]];end else cd[m]=y[bp[144]]end else local f,g,j,k,s f=m j=o g=(f+2)s={y[f](y[f+1],y[g])}for u=x,j do y[(g+u)]=s[u]end k=y[(f+3)]if k then y[g]=k else i=bq;end;end end else if not(br<3)then do if not(br>3)then y[bp[m]]=y else if(br<5)then y[m]=(y[bq]/e[o]);else h[i]=cl[bb];do i=bq;end end end end else if not(br<1)then if not(br~=1)then local f do f=bp[25]end do y[f](ci(y,(f+1),bp[127]))end elseif((e[m]<y[bp[162]]))then i=bq;end else cd[m]={}end end end else if not(br<18)then if not(br>20)then if not(br>18)then if(not(y[m]<y[o]))then i=bq;end;else if(br>19)then do cd[m]=cd[bl]end else local f,g do f,g=bz(...)end for g=1,m do y[(g-1)]=f[g]end end end else if not(br>22)then do if not(br~=21)then local f,g g=m f=y[bq]y[(g+1)]=f;y[g]=f[y[o]];else i=bq;end end else if(br<24)then do y={};end do for f=0,l do if(f<d)then y[f]=t[(f+1)];else break end;end;end else local d d=m y[d]=y[d]();end end end else if not(br>14)then if not(br<13)then if(br>n)then local d,f d=m f={}for g=1,#a do local j j=a[g]for g=0,#j do local k,l,n l=j[g]n=l[1]k=l[2]while n==y and k>=d do f[k]=n[k];l[1]=f;break end end;end;else do y[m]=c[e[bq]];end end else i=((y[m]~=y[bp[162]])and bq or i)end else if not(br>15)then y[m][e[bq]]=e[o];else do if(bp[169]>16)then local d,f,g do g=m end d=y[g]f=y[(g+2)]do if((f>0))then if((d>y[g+1]))then i=bq;else y[(g+3)]=d;end elseif((d<y[g+ba]))then i=bq;else y[(g+3)]=d;end end else b[bq]=y[bp[25]];end end end end end end else do if not(br<37)then if not(br>42)then do if not(br<40)then if not(bp[169]<41)then do if(br<42)then y[bp[25]][y[bq]]=e[o];else local b do b={}end while#a>0 do for d=1,#a do local d=a[d]for f=0,#d do local d=d[f]local f=d[1]local g=d[2]if f==y and g>=0 then b[g]=f[g]d[1]=b end end end break end return false,y[bp[25]];end end else if m then bp[25]=false;bp[162]=bq;i=(i-1);else do i=(i+bq+o);end end end else do if not(bp[q]<38)then if 38==bp[169]then y[m][e[bq]]=y[o];else local b,d,f f=bp[25]d=y[f]b=bq for g=1,b do do d[g]=y[(f+g)]end end;end else do y[m]=c[e[bq]][e[o]];end end end end end else if not(br<46)then do if not(bp[169]<48)then if(br>48)then do y[m]={};end else local b b=m y[b]=y[b](ci(y,b+1,r));end else if(bp[169]<47)then r=bp[m];else local b,c,d b=m c={y[b](ci(y,b+1,r))}d=0 for f=b,o do d=(d+1);y[f]=c[d];end end end end else if not(bp[169]<44)then if(br>44)then if(e[o]~=y[m])then i=bq;end;else do do do return y[m]end end end end else y[m]=#y[bq];end end end else if not(br<31)then do if not(br<34)then if not(bp[169]<35)then if(br<36)then local b b=m do return ci(y,b,(b+bp[127]))end;else y[m]=(y[bq]+y[o]);end else for b=m,bq do y[b]=nil;end;end else if not(br>31)then while(not y[o])do y[m]=y[o];i=bp[127];break end else do if(br<33)then h[i]={[127]=2,[p]=br-17,[41]=0,[162]=21,[25]=15};i=(i-1);else if(not(y[m]~=e[o]))then i=bq;end;end end end end end else if not(br>27)then if not(br<be)then do if(bp[w]>26)then do return y[bn][bb]end else local b,c,d,f d=m c,f=bz(y[d](y[(d+1)]))r=(f+d-1)b=0 for f=d,r do b=(b+1);y[f]=c[b];end;end end else y[m]=e[bq]end else if not(br>28)then do i=((y[m]<y[o])and bq or i)end else if(br<30)then local b,c do b=m end c={}if(#a>0)then do for d=1,#a do local f f=a[d]for a=0,#f do local d,g,h g=f[a]do d=g[1]end h=g[2]if(d==y and h>=0)then c[h]=d[h]g[1]=c end end end end end return ci(y,b,r);else do e=cd[m](e)end end end end end end end end end i=(i+1);end;end;end bi=1465 else if bi<1509 then bi=1514 return by(cm(bk()),{},bk())();else bh=76;end end end else if bi>=1207 then if bi>=1244 then if bi<1275 then bi=1284 do bz=function(...)do return{...},bj('#',...)end end end else cl={}bi=1321 end else bi=1244 bv=function(a,a,a)local a,b,c,d=86,62,97,96,12,22,89,31,37,47,34,57,12,53,68 while a~=42 do if b<=106 then if b<=62 then b=78 c,d=nil else if b<97 then b=106 do c=ce()end else b=125 d=cn:sub(ca,(ca+c-1))end end else if b<=125 then b=160 ca=(ca+c);else if b>165 then break else b=197 return d;end end end end end end else if bi<1154 then bi=1158 cs=function()local a,b a,b=cq(cn,ca,(ca+2))ca=(ca+2);do return((b*256)+a);end end else do bu=function()local a,b,c,d,e,f,g,h=58,31,92,81,27,56,38,14,57,63,15,22,49,84,70,12,98,27,47,78 while a~=30 do if b>=216 then if b>=328 then if b>=345 then if b<379 then b=387 do return(e*(2^(f-1023))*(g/cu+c))end else break end else if not(f~=0)then if not(g==bd)then f=1 do c=0 end else return(e*0)end elseif not(f==2047)then else do if 0==g then do do return(e*(0/v))end end else return(e*(1/0))end end end b=345 end else if b>=264 then if b<307 then b=311 do g=(bm(0,h,20)*4294967296+d)end else c=1 b=328 end else b=264 f=bm(20,h,11)end end else if b>=97 then if b>=137 then if b>140 then do e=((-1)^bm(31,h,1))end b=216 else b=181 if((d==0 and h==0))then return 0 end end else do h=ce()end b=137 end else if b>38 then b=97 d=ce()else c,d,e,f,g,h=nil b=61 end end end end end end bi=1207 end end end end end end end)(1,29,20,2,5,6,38,11,141,99,78,3,11,13,1,169,169,1,5,162,0,0,169,1,9,67,1,10,7,0,26,0,0)
