--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,ba,ba)local ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=116,61,96,45,15,79,64,11,16,37,56,75,21,27,66,20,68,87,89,84,77,25,75,40,29,54,33,99,11,53,91,16,77,98,42,11,87,82,18,18,34,56,91,30,65,98,26,67,48,21 while ba~=67 do if bb<=657 then if bb>=405 then if bb>=522 then if bb<=582 then if bb<=522 then cb=(unpack or table.unpack)bb=563 else if bb<578 then ck=tonumber bb=582 else do br={}end bb=622 end end else if bb<=622 then bb=641 for ba=0,255 do br[ba]=ce(ba);end else if bb>644 then bt={{0,1,2,3,4,5,6,7,8,9,10,11,12,j,14,15,},{1,f,3,2,5,4,7,6,9,8,11,10,13,12,r,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,n,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,o,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,q,9,8,},{8,9,10,s,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,i,13,12,11,e,9,8,7,6,5,4,3,2,1,0,},nil}bb=673 else bn=bofunction(e,f)return br[ck(e,16)]end)bb=657 end end end else if bb<=423 then if bb<421 then do cd=select end bb=423 else bq=type bb=459 end else if bb<=459 then bb=487 bv=(function(e,f,f,f)if'number'==bq(e)then return true else return false end end)else if bb<499 then do bm=math.abs end bb=504 else bs=math.floor bb=522 end end end end else if bb>=191 then if bb>=300 then if bb<=300 then bb=331 by=math.ldexp else if bb>338 then bb=405 do bl=setmetatable end else bb=380 bw=(getfenv or function()return _ENV end)end end else if bb>=226 then if bb<258 then bb=260 ch=table.concat else bb=300 cc=table.insert end else bb=226 bi=string.rep end end else if bb<=100 then if bb<91 then bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=nil bb=100 else do cl=string.byte end bb=115 end else if bb>=139 then if bb>146 then bb=191 bo=string.gsub else bx=string.sub bb=163 end else ce=string.char bb=139 end end end end else if bb>=1031 then if bb<=1161 then if bb>=1071 then if bb<=1071 then bb=1117 bd=function(e,e,e)local e,f,i,j=47,32,71,74,41,54,82,27,17,58,86,66,13,18,41,16 while e~=27 do if f<=75 then if f<=32 then i,j=nil f=60 else if f>64 then f=101 i=bn:sub(ca,(ca+j-1))else do j=bf()end f=75 end end else if f>=137 then if f>139 then break else f=179 return i;end else ca=(ca+j);f=137 end end end end else if bb>1124 then bb=1177 ci={}else bb=1161 bg=function(...)return{...},cd(c,...)end end end else if bb<1046 then bb=1052 cj=function()local c,e c,e=cl(bn,ca,(ca+2))ca=(ca+2);return((e*256)+c);end else bb=1071 bc=function()local c,e,f,i,j,n,o,q=50,55,44,43,29,59,82,26,10,61,89,93,11,68,96,42,85 while c~=40 do if e<=202 then if e<=75 then if e>62 then e=117 n=bf()else f,i,j,n,o,q=nil e=75 end else if e>=157 then if e<198 then if((n==0 and q==0))then do return 0 end end e=202 else e=220 i=((-1)^bj(31,q,1))end else q=bf()e=157 end end else if e>=297 then if e>=316 then if e<326 then e=335 return(i*(2^(o-1023))*(f/bk+j))else c=40;end else if 0==o then do if not(f==0)then o=1 j=0 else do return(i*0)end end end elseif 2047~=o then else if not(f~=0)then do return(i*(0/0))end else return(i*(1/0))end end e=316 end else if e>=240 then if e<255 then e=263 f=(bj(0,q,20)*4294967296+n)else e=297 do j=1 end end else e=240 o=bj(20,q,11)end end end end end end end else if bb>=1290 then if bb>=1332 then if bb<1353 then bb=1356 do return cm(bz(bw()),{},bw())();end else break end else cm=function(c,e,e,f)local f,i,j,n,o f=c[82]i=c[111]o=c[115]j=c[34]n=cf do return function(...)local c,n,q,r,s,ba,bi,bl,bm n=1 c=-h bi=-x q={}ba={...}bm=(cd('#',...)-1)s={}r={}do for h=0,bm do do if(not(h<o))then q[(h-o)]=ba[(h+1)];else r[h]=ba[(h+1)];end;end end;end bl=(bm-o+1)while true do local h,o,q,x,ba,bi,bl,bm,bo,bq o=f[n]bl=o[160]bq=o[95]bm=o[21]do bo=o[80]end bi=o[66]x=o[94]h=o[92]do q=o[81]end ba=o[106]if not(o[160]>28)then if not(bl<14)then if not(bl>20)then if not(bl<u)then if not(bl<19)then do if(bl>19)then do r[bm][j[q]]=j[bi];end else n=((j[bm]<r[o[66]])and q or n)end end else if(bl<18)then do r[bm]=r[o[81]][r[bi]];end else local h,u,bq,br bq=bm br,h=bg(r[bq](r[(bq+1)]))c=(h+bq-1)u=0 for h=bq,c do do u=(u+1);end r[h]=br[u];end;end end else if not(o[160]<15)then if 15==bl then do r[o[21]]=cm(i[q],nil,e);end else r[ba]=(function()r[bm]=cm(i[bo],nil,e);end)end else do f[n]={[160]=bl-7,[66]=39,[81]=38,[94]=0,[21]=38};end n=(n-1);end end else if not(bl>24)then do if not(bl>22)then if(bl<22)then r[bm]=r[q];else r[bm]=(r[q]+j[o[66]]);end else if(bl>23)then f[n]={[81]=31,[94]=0,[66]=0,[160]=bl- -33,[21]=6};do n=(n-1);end else local h,i,u,ba,bo do bo=o[21]end do i=o[66]end h=(bo+2)do ba={r[bo](r[bo+1],r[h])}end for bq=1,i do do r[(h+bq)]=ba[bq]end end u=r[(bo+3)]if u then r[h]=u else n=q;end;end end end else if not(bl>26)then do if(o[160]>25)then local h h=bm do r[h]=r[h](cb(r,h+1,q));end else r[o[21]]=(r[o[81]]+r[bi]);end end else if(bl<28)then f[n]={[81]=3,[21]=0,[94]=0,[66]=0,[160]=bl- -3};n=(n-1);else r[bm]=#r[q];end end end end else if not(bl<7)then if not(bl<10)then if not(o[160]<12)then if 12==bl then r[bm]=(r[q]/j[bi]);else local h do h=bm end r[h]=r[h](cb(r,h+1,c));end else do if(bl<11)then local h,i,u do i=bm end h=r[i]u=r[(i+2)]do if((u>0))then if((h>r[i+1]))then n=o[81];else r[(i+b)]=h;end elseif((h<r[i+1]))then n=q;else r[(i+g)]=h;end end else local b b=bm r[b]=r[b]();end end end else if not(bl<8)then if not(bl~=8)then local b b=o[21]do do return r[b](cb(r,(b+1),q))end end;else local b,g,h b=bm do g=r[b]end do h=q end for i=m,h do do g[i]=r[(b+i)]end end;end else local b,g b=o[81]g=r[b]for h=(b+1),bi do g=(g..r[h]);end;r[bm]=g;end end else if not(bl>2)then if not(bl>0)then local b,g,h b=bm g={r[b](cb(r,b+1,c))}do h=0 end for i=b,bi do h=(h+1);r[i]=g[h];end else if(bl>1)then while not r[o[21]]do n=q;break end else if r[bm]then n=q;end;end end else do if not(bl<5)then if(bl<6)then do n=((j[bm]==j[o[66]])and q or n)end else local b b=bm r[b]=r[b](r[b+1]);end else if(bl<t)then r[o[21]]=j[q]else do f[n]={[81]=4,[66]=22,[94]=0,[21]=4,[160]=o[160]- -31};end n=(n-1);end end end end end end else if not(o[160]>42)then if not(bl>35)then if not(bl<32)then do if not(o[160]>33)then if(bl>32)then f[n]={[81]=14,[94]=0,[21]=26,[160]=bl-12,[66]=40};n=(n-1);else local b,g,h,i h=bm i,g=bg(r[h](cb(r,(h+1),q)))c=(g+h-w)b=0 do for g=h,c do b=(b+1);r[g]=i[b];end;end end else if(bl>34)then r[bm]=r[q][j[o[66]]];else f[n]={[94]=0,[81]=5,[160]=o[160]- -4,[21]=34,[66]=0};n=(n-1);end end end else if not(bl>29)then if(not(r[bm]~=j[bi]))then do n=o[81];end end;else if(bl>30)then local b,g,h b=bm do h=r[(b+2)]end do g=(r[b]+h)end r[b]=g;if((h>0))then do if(not(g>r[b+1]))then n=q;r[(b+3)]=g;end end elseif(not(g<r[b+1]))then n=q;r[(b+3)]=g;end else local b b={}if(#s>0)then for g=1,#s do local h h=s[g]for g=0,#h do local i,m,t i=h[g]t=i[1]m=i[2]if(t==r and m>=0)then b[m]=t[m]do i[1]=b end end end end end do return 0,true,o[bi];end end end end else if not(bl>38)then if not(bl>36)then do return r[bm]end else if not(bl~=37)then local b,g b=bm do g=r[q]end do r[(b+1)]=g;end r[b]=g[j[bi]];else r[bm]={};end end else if not(bl>40)then if(bl<a)then j=cf[o[21]](j)else local a,b b=bm a={}if(#s>0)then for g=1,#s do local h h=s[g]do for g=0,#h do local i,m,s s=h[g]i=s[1]m=s[2]if(i==r and m>=0)then a[m]=i[m]s[1]=a end end end end end return cb(r,b,c);end else if(bl>41)then do n=q;end else r[bm]=(r[q]%j[bi]);end end end end else if not(bl>49)then do if not(bl<46)then if not(bl<48)then do if(bl>48)then r[bm]=(r[q]*j[bi]);else r[bm][r[q]]=r[o[66]];end end else do if not(bl~=46)then if(not(r[bm]==r[bi]))then n=q;end;else do r[bm][j[q]]=r[bi];end end end end else if not(bl<44)then if 44==bl then local a a=o[21]r[a](cb(r,(a+l),q))else if((r[o[21]]<r[o[66]]))then n=q;end;end else do r[bm][r[o[81]]]=j[bi];end end end end else if not(o[160]>53)then if not(bl<52)then if(bl>52)then local a a=bm do r[a](r[(a+1)])end else if((j[bm]<r[bi]))then n=q;end;end else if not(bl~=50)then r[bm]=nil;else r[bm]=(r[q]-r[o[66]]);end end else if not(bl>55)then if(o[160]<55)then if(j[bi]~=r[bm])then do n=q;end end;else do f[n]=ci[x];end do n=o[81];end end else if(bl<57)then f[n]={[21]=14,[81]=17,[160]=bl-53,[66]=29,[94]=0};n=(n-1);else r[bm]=e[j[q]];end end end end end end n=(n+1);end;end;end end bb=1332 end else if bb>=1200 then if bb>1202 then bb=1290 cg={}else cf={}bb=1242 end else bz=function(a,b)local b,c,e,f,g,h,i,j=62,39,52,65,31,37,67,11,73,90,82,80,71,38,80,10,21,35,55,87,38,20,80,86,20,41 while b~=43 do if c>=317 then if c>=477 then if c>=532 then if c>=563 then if c>572 then b=43;else c=578 do return i;end end else do i[111]=j;end c=563 end else if c>483 then for b=1,bf()do j[b-1]=bz();end c=532 else c=501 i[82]=h;end end else if c>=396 then if c>399 then for b=1,bf()do local l,m,n,o,q,r=102,45,29,84,28,36,71,96,96,15,64,54,12,91,20,74,67,64,25,95,10,74,24,70 while l~=54 do if m>=325 then if m<=446 then if m<=360 then if m<357 then m=360 r[160]=bp(q,1,11);else m=404 r[21]=bp(o,3,11);end else if m>409 then r[66]=bp(o,21,29);m=484 else m=446 r[81]=bp(q,12,33);end end else if m>=555 then if m<=555 then m=601 r[y]=-r[66]else if m<631 then m=640 h[b]=r;else l=54;end end else if m>491 then r[92]=-r[21]m=555 else m=528 r[94]=bp(o,12,20);end end end else if m>=187 then if m<=208 then if m<200 then m=208 do while co()==1 do for b=1,co()do r[84][b]={co()==0,bf()}end break end end else m=255 o=bf()end else if m<=255 then m=276 q=bf()else if m<288 then n=bp(o,1,2)m=295 else m=325 r[188]=n end end end else if m<=88 then if m<81 then n,o,q,r=nil m=88 else r={{},nil,nil}m=135 end else if m>138 then m=187 r[84]={};else r[95]=co();m=152 end end end end end end c=477 else i[34]=g c=431 end else if c>319 then for b=1,f do local l,m,n,o=64,38,80,84,61,58,23,29,16,78,29,35,83,67 while l~=33 do if m>=114 then if m>=158 then if m>163 then l=33;else m=189 g[b]=o;end else if(2==n)then o=(0~=co());elseif(not(n~=0))then o=bc();elseif(3==n)then o=bd();elseif(4==n)then do o=a[bd()];end end;m=158 end else if m<=38 then n,o=nil m=70 else if m>73 then do o=nil end m=114 else n=co()m=92 end end end end end c=396 else c=366 g={}end end end else if c<=146 then if c>=124 then if c>130 then i={}c=170 else j={}c=146 end else if c<70 then c=75 e,f,g,h,i,j=nil else c=124 h={}end end else if c>=226 then if c>233 then f=bf()c=317 else i[115]=co();c=268 end else if c>175 then c=226 for a=(#ci+1),(#ci+e)do local b,f,g,h,i=58,52,72,51,58,95,22,86,45,45,74,83,80,70,31,58,38,96,25,28,65,70,33,66,97 while b~=48 do if f<=276 then if f<=140 then if f<=90 then if f<83 then g,h,i=nil f=90 else f=106 g={}end else if f>114 then f=160 i=bf()else do g[95]=co();end f=140 end end else if f<=189 then if f<185 then f=189 h=bf()else g[94]=co();f=231 end else if f>236 then f=306 g[160]=bp(h,1,11);else f=276 g[188]=bp(i,1,z);end end end else if f<=409 then if f>=367 then if f>371 then f=431 g[81]=bp(h,12,k);else do g[66]=bp(i,d,p);end f=409 end else if f<317 then f=322 g[21]=bp(i,3,11);else f=367 g[80]=bp(i,12,20);end end else if f<=466 then if f<460 then g[92]=-g[21]f=466 else g[106]=-g[66]f=494 end else if f>501 then b=48;else f=534 do ci[a]=g;end end end end end end end else e=bf()c=203 end end end end end end bb=1200 end end end else if bb>=861 then if bb<=932 then if bb>=884 then if bb>891 then bb=958 do bp=function(a,b,c,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end end else bu=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bt[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)bb=932 end else bb=884 bj=function(a,b,c,d,d)local d,e,f=50,35,54,97,67,67,22,85,46,33,54,33 while d~=29 do if e<=100 then if e>=76 then if e<93 then do f=nil end e=100 else e=127 f=((b/bh[a])%bh[c])end else e=76 f=nil end else if e>=145 then if e>151 then break else e=174 return f end else e=145 f=(f-f%1)end end end end end else if bb>=974 then if bb>977 then do co=function()local a a=cl(bn,ca,ca)ca=(ca+1);return a;end end bb=1031 else bb=1007 bf=function()local a,b,c,d c,b,d,a=cl(bn,ca,(ca+3))ca=(ca+4);return((a*16777216)+(d*65536)+(b*256)+c);end end else bb=974 ca=1 end end else if bb<=719 then if bb>676 then bb=765 bk=(2^52)else do be=''end bb=719 end else if bb>=787 then if bb<805 then bb=812 cn=2 else bb=861 for a=v,31 do bh[a]=cn cn=(cn*2)end end else bb=787 bh={[0]=1}end end end end end end end)(40,3,'#',21,10,0,3,1,14,13,33,1,1,9,3,29,10,15,11,4,17,1,1,1,106,2)
